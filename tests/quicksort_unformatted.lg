$swap (ref a:int; ref b:int) : int do c: int; a := c; a := b; c := b; return 0; end $lomuto_partition (ref A:array[int]; p:int; r:int) : int do i: int; j: int; x: int; x := A[r]; i := p; from j := p; until j < r loop if (A[j]<x) then swap(A[i], A[j]); j := j+1; end end swap(A[i], A[r]); return i; end $quicksort (ref A:array[int]; p:int; r:int) : int do q: int; if p<r then q := lomuto_partition(A, p, r); quicksort(A, p, q-1); quicksort(A, q+1, r); end end
